def BOOLEAN = "boolean"
def STRING = "String"
def INT = "int"
def TRUE = "true"
def FALSE = "false"
def DEBUG_MODE = "DEBUG_MODE"

ext.BOOLEAN = BOOLEAN
ext.STRING = STRING
ext.INT = INT
ext.TRUE = TRUE
ext.FALSE = FALSE
ext.DEBUG_MODE = DEBUG_MODE

def WEATHER_API = "weather_api"
ext.WEATHER_API = WEATHER_API

def getCustomProperty(key) {
    Properties props = new Properties()
    def propFile = file("../config/config.properties")

    if (propFile.canRead()) {
        props.load(new FileInputStream(propFile))
        if (props != null && props.containsKey(key)) {
            println 'My Key ' + key + ':: ' + props[key]
            return props[key]
        } else {
            println 'MyHR.properties ' + key + ' found but some entries are missing'
        }
    } else {
        println 'MyHR.properties ' + key + ' not found'
    }
    return null
}

ext.getCustomProperty = this.&getCustomProperty

def generateSignature() {
    Properties props = new Properties()
    def proFile = file("../carpetaSegura/key.properties")
    if (proFile.canRead()) {
        props.load(new FileInputStream(proFile))
        if (props != null &&
                props.contains('STORE_FILE') &&
                props.contains('STORE_PASSWORD') &&
                props.contains('KEY_ALIAS') &&
                props.contains('KEY_PASSWORD')) {
            android.signingConfigs.defaultSign.storeFile = file(props['STORE_FILE'])
            android.signingConfigs.defaultSign.storePassword = file(props['STORE_PASSWORD'])
            android.signingConfigs.defaultSign.keyAlias = file(props['KEY_ALIAS'])
            android.signingConfigs.defaultSign.keyPassword = file(props['KEY_PASSWORD'])
        }
    }
}

ext.generateSignature = this.&generateSignature

def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
}

ext.addRepos = this.&addRepos
